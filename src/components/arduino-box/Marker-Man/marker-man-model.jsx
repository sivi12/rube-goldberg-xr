/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/markerMan.glb 
*/

import React, { useEffect, useState } from "react";
import { useFrame, useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import { useBox } from "@react-three/cannon";
import { markerManAnimations } from "./maker-man-animations";

export function MarkerManModel({ currentAnimation, startGame }) {
  const group = React.useRef();

  const hipRef = React.useRef();
  const { scene, animations: loadedAnimations } = useGLTF("/marker-man.glb");
  //console.log("Loaded animations:", loadedAnimations);

  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions, mixer } = useAnimations(loadedAnimations, group);
  console.log("Loaded animations:", loadedAnimations);

  useEffect(() => {
    markerManAnimations(actions, currentAnimation, mixer);
    console.log(
      currentAnimation,
      "----------------------------------------------------"
    );
  }, [currentAnimation]);

  // Box for the character
  const [hitBoxRef, hitBoxApi] = useBox(() => ({
    type: "Static",
    mass: 100,
    rotation: [Math.PI / 2, 0, 0],
    position: [
      hipRef.current ? hipRef.current.matrixWorld.elements[12] : 0,
      hipRef.current ? hipRef.current.matrixWorld.elements[13] : 0,
      hipRef.current ? hipRef.current.matrixWorld.elements[14] : 0,
    ],
    args: [0.05, 0.05, 0.17],
  }));

  //Aktulaisiere die Position der HitBox
  useFrame(() => {
    if (hipRef.current) {
      const position = hipRef.current.matrixWorld.elements;
      const rotation = hipRef.current.rotation;
      hitBoxApi.position.set(position[12], position[13], position[14]);
      hitBoxApi.rotation.set(rotation._x, rotation._z, rotation._y);
    }
  });

  return (
    <group ref={group} dispose={null}>
      <group name="Scene">
        <group name="MocapGuy_HiRes_Meshes" scale={0.001} />
        <group name="Armature007" scale={0.001} rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.mixamorigHips} ref={hipRef} />
          <group name="MocapGuy_Body">
            <skinnedMesh
              name="MocapGuy_Body_1"
              geometry={nodes.MocapGuy_Body_1.geometry}
              material={materials.Body_MAT}
              skeleton={nodes.MocapGuy_Body_1.skeleton}
            />
            <skinnedMesh
              name="MocapGuy_Body_2"
              geometry={nodes.MocapGuy_Body_2.geometry}
              material={materials.Reflectors}
              skeleton={nodes.MocapGuy_Body_2.skeleton}
            />
          </group>
          <skinnedMesh
            name="MocapGuy_BrowsLashes"
            geometry={nodes.MocapGuy_BrowsLashes.geometry}
            material={materials.Brows_MAT}
            skeleton={nodes.MocapGuy_BrowsLashes.skeleton}
          />
          <skinnedMesh
            name="MocapGuy_Caruncula"
            geometry={nodes.MocapGuy_Caruncula.geometry}
            material={materials.Body_MAT}
            skeleton={nodes.MocapGuy_Caruncula.skeleton}
          />
          <skinnedMesh
            name="MocapGuy_Eyes"
            geometry={nodes.MocapGuy_Eyes.geometry}
            material={materials.Eyes_MAT}
            skeleton={nodes.MocapGuy_Eyes.skeleton}
          />
          <group name="MocapGuy_Hat">
            <skinnedMesh
              name="MocapGuy_Hat_1"
              geometry={nodes.MocapGuy_Hat_1.geometry}
              material={materials.Body_MAT}
              skeleton={nodes.MocapGuy_Hat_1.skeleton}
            />
            <skinnedMesh
              name="MocapGuy_Hat_2"
              geometry={nodes.MocapGuy_Hat_2.geometry}
              material={materials.Reflectors}
              skeleton={nodes.MocapGuy_Hat_2.skeleton}
            />
          </group>
          {/* <skinnedMesh
            name="MocapGuy_Teeth"
            geometry={nodes.MocapGuy_Teeth.geometry}
            material={materials.Body_MAT}
            skeleton={nodes.MocapGuy_Teeth.skeleton}
          /> */}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/markerMan.glb");
