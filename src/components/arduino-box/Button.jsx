/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/button.glb 
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useBox } from "@react-three/cannon";
import { applyOffset } from "../../helpers/apply-offset";

export function ButtonModel({
  position = [0.0, -0.05, 0.15],
  scale = 0.023,
  rotation = [Math.PI / 2, 0, 0],
  setCurrentAnimation,
}) {
  const { nodes, materials } = useGLTF("/Models/button.glb");

  const [boxRef, boxApi] = useBox(() => ({
    type: "Static",
    args: [0.05, 0.05, 0.03],
    position: [...applyOffset(position, rotation, 0, -0.1, 0.12)],
    rotation: [0, rotation[1], 0],
    onCollide: (e) => setCurrentAnimation("endAnimation"),
  }));

  useEffect(() => {
    boxApi.position.set(...applyOffset(position, rotation, +0, -0.075, 0.125));
    boxApi.rotation.set(0, rotation[1], 0);
  }, [position, boxApi.position, boxApi]);

  return (
    <group dispose={null}>
      <group
        scale={scale}
        position={[0.0, -0.08, 0.125]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <mesh
          geometry={nodes.defaultMaterial.geometry}
          material={materials["Material.001"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/Models/button.glb");
